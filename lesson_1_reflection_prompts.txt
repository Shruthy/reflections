How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Fill in your answer here

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Helps me see where I have done the changes and the number of versions. This helps to compare different

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    manual commit
    Pros - commit logical changes, cons - human error, commit maybe too big, 

    auto commit
    pros - minimizes human error, cons - may not be logical version, too many versions to keep track of

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git uses a concept called repository, where all the logically connected files are committed in one comit. Even if the changes is made is only one file, all the related files gets committed again, i.e everything in repository gets commit. Google Docs, treats each file as individual separate files. Google Docs does not have the concept of repository that allows users to make logical connection, as we see in Git

How can you use the commands git log and git diff to view the history of files?

    git log command displays all the comit IDs with date and time, and comment. Git diff command can be used to comapre 2 file or 2 repository commit changes, by entering the commit IDs you want to compare

How might using version control make you more confident to make changes that
could break something?

    It becomes easier to checkout older version and see exactly where the lines were added / removed and compare what changed the behavior of the code

Now that you have your workspace set up, what do you want to try using Git for?

    version control my codes
